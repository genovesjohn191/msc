@import "../shared/base";
@import "fonts";
@import "classes/mcs-page-title";
@import "classes/mcs-search";
@import "classes/mcs-tabs";
@import "classes/mcs-pre-loader";

*,
*:after,
*:before {
  @include box-sizing(border-box);
}

html {
  position: relative;
  height: 100%;

  body {
    height: 100%;
    overflow: hidden;
    font-family: $font-default;
    color: $color-black;
    @include font-size($font-size-default, $line-height-default);
    @include breakpoint(small) {
      @include font-size($font-size-small, $line-height-small);
      padding-top: 65px;
    }

    h1, h2, h3, h4 {
      width: 100%;
      font-family: $header-font;
    }

    h1 {
      @include font-size($h1-default-font-size, $h1-default-line-height);
      @include breakpoint(medium) {
        @include font-size($h1-medium-font-size, $h1-medium-line-height);
      }
      @include breakpoint(small) {
        @include font-size($h1-small-font-size, $h1-small-line-height);
      }
    }

    h2 {
      @include font-size($h2-default-font-size, $h2-default-line-height);
      @include breakpoint(small) {
        @include font-size($h2-small-font-size, $h2-small-line-height);
      }
    }

    h3 {
      @include font-size($h3-default-font-size, $h3-default-line-height);
      @include breakpoint(small) {
        @include font-size($h3-small-font-size, $h3-small-line-height);
      }
    }

    h4 {
      @include font-size($h4-default-font-size, $h4-default-line-height);
      @include breakpoint(small) {
        @include font-size($h4-small-font-size, $h4-small-line-height);
      }
    }

    small {
      font-family: $caption-default-font;
      @include font-size($caption-default-font-size, $caption-default-line-height);
      @include breakpoint(small) {
        @include font-size($caption-small-font-size, $caption-small-line-height);
      }
      @include breakpoint(xsmall) {
        @include font-size($caption-xsmall-font-size, $caption-xsmall-line-height);
      }
    }

    a {
      font-family: $link-font;
      text-decoration: underline;
      color: $color-black;
      @include font-size($link-default-font-size, $link-default-line-height);
      @include breakpoint(small) {
        @include font-size($font-size-small, $line-height-small);
      }

      &:hover {
        cursor: pointer;
      }

      // Override bootstrap no underline for non-href
      &:not([href]):not([tabindex]) {
        text-decoration: underline;
        &:hover {
          text-decoration: underline;
        }
      }

      &:not([href]) {
        text-decoration: none;
        &:hover {
          text-decoration: none;
        }
      }
    }

    input,
    textarea,
    select,
    input.form-control,
    textarea.form-control,
    select.form-control {
      font-family: $input-font;
      @include font-size($input-font-size, $input-line-height);
      color: $input-text-color;
      border-width: $input-border-width;
      border-style: $input-border-style;
      border-color: $input-border-color;
      padding: $input-padding;
      @include border-radius($input-border-radius);
      @include set-placeholder-color($input-placeholder-text-color);

      &:focus {
        outline: none;
        border-color: $input-border-color-focused;
      }
    }

    input::-ms-clear{
      display: none;
    }

    button, button.btn {
      font-family: $button-font;
      font-size: $button-font-size;
    }

    header {
      background-color: $color-black;
      color: $color-white;
    }

    footer {
      &.dark {
        background-color: $color-black;
        color: $color-white;

        a {
          color: $color-white;
        }
      }

      &.light {
        background-color: $color-white;
        color: $color-black;
      }
    }
  }
}

.hidden-medium {
  @include breakpoint(medium) {
    display: none !important;
  }
}

.hidden-small {
  @include breakpoint(small) {
    display: none !important;
  }
}

.hidden-xsmall {
  @include breakpoint(xsmall) {
    display: none !important;
  }
}

.unstyled-list {
  margin: 0;
  padding: 0;
  list-style: none;
}

.text-color-success,
.text-color-completed {
  color: $color-green-00;
}

.text-color-error,
.text-color-failed,
.text-color-cancelled {
  color: $color-red-00;
}

.text-color-active {
  color: $color-black;
}

.font-normal {
  font-family: $base-font;
}

.font-bold {
  font-family: $base-font-bold;
}

.missing-data-info {
  color: $color-grey-02;
}

.mcs-table-wrapper {
  display: inline-block;
  @include set-items-interval($space-xxlarge);

  @include breakpoint(small) {
    display: block;
  }

  .emphasize {
    @include set-items-interval($space-small, horizontal);
    @include display-flex(row);
    align-items: center;
  }
}

.search-wrapper {
  @include display-flex(row);
  align-items: center;
  @include set-items-interval($space-large, horizontal);

  @include breakpoint(small) {
    @include display-flex(column);
    align-items: stretch;
  }

  mcs-search {
    min-width: 300px;;
    @include breakpoint(small) {
      min-width: 100%;
    }
  }

  mcs-button {
    @include breakpoint(small) {
      margin: 0;
      display: block;
      min-width: 100%;
    }
  }

  .record-count {
    margin-left: auto;
  }
}

// TODO: Temporary fix for loader. Will remove after refactoring loader
.loader-container {
  display: block;
  position: relative;
  min-height: 100%;

  .loader-container {
    z-index: $zindex-loader-container;
  }
}