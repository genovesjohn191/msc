import {
  Component,
  Output,
  EventEmitter,
  OnInit,
  ChangeDetectionStrategy,
  ViewEncapsulation
} from '@angular/core';
import {
  Observable,
  of
} from 'rxjs';
import { McsTextContentProvider } from '@app/core';
import { McsServerCreateAddOnAntiVirus } from '@app/models';

@Component({
  selector: 'mcs-anti-malware-addon',
  templateUrl: './anti-malware.addon.html',
  encapsulation: ViewEncapsulation.None,
  changeDetection: ChangeDetectionStrategy.OnPush,
  host: {
    'class': 'anti-malware-wrapper'
  }
})

export class AntiMalwareAddOnComponent implements OnInit {
  public textContent: any;
  public variantOptions$: Observable<string[]>;
  public antiMalwareData: McsServerCreateAddOnAntiVirus;

  @Output()
  public dataChange = new EventEmitter<McsServerCreateAddOnAntiVirus>();

  public constructor(private _textProvider: McsTextContentProvider) {
    this.antiMalwareData = new McsServerCreateAddOnAntiVirus();
  }

  public ngOnInit(): void {
    this.textContent = this._textProvider.content.servers.shared.antiMalwareAddOn;
    this._subscribeToVariants();
  }

  /**
   * An event that emits when the service selection has been change
   */
  public onServiceChanged(variantName: string): void {
    this._notifyChangeParameter(variantName);
  }

  private _subscribeToVariants(): void {
    // TODO: Need to use the order/items/types here to get all the
    // options avaible in the variant
    this.variantOptions$ = of(['Standard', 'Self-Managed']);
  }

  /**
   * Event that emits whenever there are changes in the data
   */
  private _notifyChangeParameter(variantName: string): void {
    // TODO: As of now since we only have 1 technology which is the
    // Trend Micro, we need to set it manually first in order for the anti virus to work
    this.dataChange.emit({
      technology: 'Trend Micro',
      variant: variantName
    });
  }
}
