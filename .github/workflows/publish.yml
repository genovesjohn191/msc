name: publish

on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: "Environment to run the workflow."
        default: 'staging'
      image_version:
        type: string
        description: "Version of the Docker image."
        required: true
      is_image_latest:
        type: boolean
        description: "Tag this docker image latest?"
        default: true
  
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: "Environment to run the workflow."
        default: "staging"
      image_version:
        type: string
        description: "Version of the Docker image."
        required: true
      is_image_latest:
        type: boolean
        description: "Tag this docker image latest?"
        default: true


jobs:

  publish:
    name: publish
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
      
    steps:

    - uses: actions/checkout@v3

    - run: echo ${GITHUB_REF_NAME}

    - name: "Download artifacts"
      uses: actions/download-artifact@v3
      with:
        name: portal_workspace
        path: dist

    - name: "Azure login"
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: "Acr login"
      run: az acr login --name ${{ vars.AZURE_CONTAINER_REGISTRY }}
    
    - name: Build image
      run: docker build -t ${{ vars.IMAGE_NAME }}:${{ inputs.image_version }} .

    - name: Tag and push image to ACR
      run: |
        docker tag ${{ vars.IMAGE_NAME }}:${{ inputs.image_version }} ${{ vars.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ vars.IMAGE_NAME }}:${{ inputs.image_version }}
        docker push ${{ vars.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ vars.IMAGE_NAME }}:${{ inputs.image_version }}
    
    - name: Tag image to latest and push to ACR
      if: ${{ inputs.is_image_latest }}
      run: |
        docker tag ${{ vars.IMAGE_NAME }}:${{ inputs.image_version }} ${{ vars.IMAGE_NAME }}:latest
        docker tag ${{ vars.IMAGE_NAME }}:${{ inputs.image_version }} ${{ vars.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ vars.IMAGE_NAME }}:latest
        docker push ${{ vars.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ vars.IMAGE_NAME }}:latest
  
        
    
